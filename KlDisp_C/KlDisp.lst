CCS PCM C Compiler, Version 4.140, 65262               23-апр-14 21:02

               Filename:   D:\Projects PIC\KlDisp_C\KlDisp.lst

               ROM used:   146 words (14%)
                           Largest free fragment is 878
               RAM used:   5 (7%) at main() level
                           11 (16%) worst case
               Stack:     2 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   049
0003:  NOP
.................... #include <KlDisp.h> 
.................... #include <16F84A.h> 
.................... //////// Standard Header file for the PIC16F84A device //////////////// 
.................... #device PIC16F84A 
.................... #list 
....................  
....................  
.................... #FUSES NOWDT                     //No Watch Dog Timer 
.................... #FUSES HS                        //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
....................  
.................... #use delay(clock=4000000) 
....................  
.................... #use fixed_io(a_outputs=PIN_A0, PIN_A1) 
.................... #use fixed_io(b_outputs=PIN_B0, PIN_B1, PIN_B2, PIN_B3) 
....................  
.................... #byte PORT_A = 5 
.................... #byte PORT_B = 6 
.................... #bit COL1 = PORT_B.5         // Столбец 1 - RB5 
.................... #bit COL2 = PORT_B.6         // Столбец 2 - RB6 
.................... #bit COL3 = PORT_B.7         // Столбец 3 - RB7 
.................... #bit SDO = PORT_A.0 
.................... #bit SCK = PORT_A.1 
....................  
....................  
....................  
....................  
.................... unsigned int scan_it(void) 
.................... { 
....................     unsigned int key, pattern; 
....................     key=1;  
0004:  MOVLW  01
0005:  MOVWF  16
....................     pattern = 0x01;/* Начальное значение маски Ь'11111110' */ 
0006:  MOVWF  17
....................     while(key<13)              /* У нас 12 клавиш */ 
....................     { 
0007:  MOVF   16,W
0008:  SUBLW  0C
0009:  BTFSS  03.0
000A:  GOTO   01A
....................         PORT_B = ~pattern;      /* Выбираем строку */ 
000B:  MOVF   17,W
000C:  MOVWF  06
000D:  COMF   06,F
....................         if(!COL1) {break;}     /* Считываем состояние каждого столбца, */ 
000E:  BTFSS  06.5
000F:  GOTO   01A
....................         key++;                 /* выходя из цикла при нулевом значении */ 
0010:  INCF   16,F
....................         if(!COL2) {break;}     /* ИНАЧЕ инкрементируем счетчик цикла */ 
0011:  BTFSS  06.6
0012:  GOTO   01A
....................         key++; 
0013:  INCF   16,F
....................         if(!COL3) {break;} 
0014:  BTFSS  06.7
0015:  GOTO   01A
....................         key++; 
0016:  INCF   16,F
....................         pattern = pattern << 1;  /* Сдвигаем маску на один бит влево        */ 
0017:  BCF    03.0
0018:  RLF    17,F
....................     } 
0019:  GOTO   007
....................     if(key==13)  {key = 0xFF;}  /* Если в счетчике число 13, нажатые  клавиши отсутствуют */ 
001A:  MOVF   16,W
001B:  SUBLW  0D
001C:  BTFSS  03.2
001D:  GOTO   020
001E:  MOVLW  FF
001F:  MOVWF  16
....................     return key; 
0020:  MOVF   16,W
0021:  MOVWF  0D
.................... } 
0022:  RETURN
....................  
.................... unsigned int get_it(void)  
.................... { 
....................     unsigned int count, old_key, new_key;  
....................     count = 0; 
0023:  CLRF   13
....................     while(count<255)  
....................     { 
0024:  INCFSZ 13,W
0025:  GOTO   027
0026:  GOTO   034
....................         new_key = scan_it(); 
0027:  CALL   004
0028:  MOVF   0D,W
0029:  MOVWF  15
....................         if(new_key == old_key) 
002A:  MOVF   14,W
002B:  SUBWF  15,W
002C:  BTFSS  03.2
002D:  GOTO   030
....................         { count++;} 
002E:  INCF   13,F
....................         else 
002F:  GOTO   033
....................         { 
....................             old_key = new_key; 
0030:  MOVF   15,W
0031:  MOVWF  14
....................             count = 0; 
0032:  CLRF   13
....................         } 
....................     } 
0033:  GOTO   024
....................     return (old_key); 
0034:  MOVF   14,W
0035:  MOVWF  0D
.................... } 
0036:  GOTO   05A (RETURN)
....................  
.................... void spi_write(datum) 
.................... { 
....................     int k; 
....................     for (k=0; k<4; k++) 
0037:  CLRF   14
0038:  MOVF   14,W
0039:  SUBLW  03
003A:  BTFSS  03.0
003B:  GOTO   047
....................     { 
....................         if((datum & 0x08)) { SDO = 1;} 
003C:  BTFSS  13.3
003D:  GOTO   040
003E:  BSF    05.0
....................         else {SDO = 0;} 
003F:  GOTO   041
0040:  BCF    05.0
....................         SCK = 1; 
0041:  BSF    05.1
....................         SCK = 0; 
0042:  BCF    05.1
....................          
....................         datum = datum <<1; 
0043:  BCF    03.0
0044:  RLF    13,F
....................     } 
0045:  INCF   14,F
0046:  GOTO   038
....................     SDO = 0; 
0047:  BCF    05.0
.................... } 
0048:  RETURN
....................  
.................... void main() 
.................... { 
0049:  CLRF   04
004A:  MOVLW  1F
004B:  ANDWF  03,F
....................     set_tris_a(0x00);  
004C:  MOVLW  00
004D:  TRIS   5
....................     set_tris_b(0xf0); 
004E:  MOVLW  F0
004F:  TRIS   6
....................     port_b_pullups(TRUE); 
0050:  BSF    03.5
0051:  BCF    01.7
....................      
....................     unsigned int inpkey, oldkey; 
....................      
....................     SDO = 0; 
0052:  BCF    03.5
0053:  BCF    05.0
....................     SCK = 0; 
0054:  BCF    05.1
....................     while (TRUE) 
....................     { 
....................         if(scan_it()!= 0xFF) 
0055:  CALL   004
0056:  INCFSZ 0D,W
0057:  GOTO   059
0058:  GOTO   090
....................         { 
....................            inpkey = get_it(); 
0059:  GOTO   023
005A:  MOVF   0D,W
005B:  MOVWF  11
....................            if(inpkey != oldkey) 
005C:  MOVF   12,W
005D:  SUBWF  11,W
005E:  BTFSC  03.2
005F:  GOTO   090
....................            { 
....................                 switch(inpkey) 
....................                 { 
0060:  MOVF   11,W
0061:  XORLW  0B
0062:  BTFSC  03.2
0063:  GOTO   06E
0064:  XORLW  01
0065:  BTFSC  03.2
0066:  GOTO   074
0067:  XORLW  06
0068:  BTFSC  03.2
0069:  GOTO   07C
006A:  XORLW  F3
006B:  BTFSC  03.2
006C:  GOTO   086
006D:  GOTO   08A
....................                     case 11: 
....................                     {  
....................                         spi_write(0); 
006E:  CLRF   13
006F:  CALL   037
....................                         oldkey = inpkey; 
0070:  MOVF   11,W
0071:  MOVWF  12
....................                         inpkey = 0; 
0072:  CLRF   11
....................                     } 
....................                     break; 
0073:  GOTO   090
....................                     case 10: 
....................                     {  
....................                         spi_write(0); 
0074:  CLRF   13
0075:  CALL   037
....................                         spi_write(0); 
0076:  CLRF   13
0077:  CALL   037
....................                         oldkey = inpkey; 
0078:  MOVF   11,W
0079:  MOVWF  12
....................                         inpkey = 0; 
007A:  CLRF   11
....................                     } 
....................                     break; 
007B:  GOTO   090
....................                     case 12: 
....................                     {  
....................                         spi_write(0); 
007C:  CLRF   13
007D:  CALL   037
....................                         spi_write(0); 
007E:  CLRF   13
007F:  CALL   037
....................                         spi_write(0); 
0080:  CLRF   13
0081:  CALL   037
....................                         oldkey = inpkey; 
0082:  MOVF   11,W
0083:  MOVWF  12
....................                         inpkey = 0; 
0084:  CLRF   11
....................                     } 
....................                     break; 
0085:  GOTO   090
....................                     case 255: 
....................                     {  
....................                         oldkey = inpkey; 
0086:  MOVF   11,W
0087:  MOVWF  12
....................                         inpkey = 0; 
0088:  CLRF   11
....................                     } 
....................                     break; 
0089:  GOTO   090
....................                     default: 
....................                     { 
....................                         spi_write(inpkey); 
008A:  MOVF   11,W
008B:  MOVWF  13
008C:  CALL   037
....................                         oldkey = inpkey; 
008D:  MOVF   11,W
008E:  MOVWF  12
....................                         inpkey = 0; 
008F:  CLRF   11
....................                     } 
....................                     break; 
....................                 } 
....................             } 
....................         } 
....................     } 
0090:  GOTO   055
....................  
.................... } 
....................  
0091:  SLEEP

Configuration Fuses:
   Word  1: 3FF2   HS NOWDT PUT NOPROTECT
