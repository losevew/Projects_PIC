MPASM  5.42                        KLDISP.ASM   6-16-2013  18:34:31         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;***********************************************************************************************
                      00002 ; KLDisp.asm
                      00003 ; Проверка вывода с клавиытуры на индикатор.
                      00004 ; PIC16F84A      Кварц 4 мГц.
                      00005 ;===============================================================================================
                      00006             LIST        p=16F84A    ; Установка типа микроконтроллера.
2007   3FF1           00007             __CONFIG    03FF1H      ; Бит защиты выключен, WDT выключен, 
                      00008                                     ; стандартный XT - генератор.
                      00009             include "p16f84a.inc"
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F84A processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2011 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00201         LIST
                      00010 ;===============================================================================================
                      00011 ; Определение  названия  и  положения  регистров  общего  назначения.
                      00012 ;===============================================================================================
  00000020            00013 KEY_COUNT   equ h'20'
  00000021            00014 PATTERN     equ h'21'
  00000022            00015 COUNT       equ h'22'
  00000023            00016 NEW_KEY     equ h'23' 
  00000024            00017 OLD_KEY     equ h'24'
  00000025            00018 DATA_OUT    equ h'25'
  00000026            00019 TEMP        equ h'26'
  00000027            00020 COUNT2      equ h'27'
                      00021 
  00000000            00022 SDO         equ 0 
  00000001            00023 SCK         equ 1
                      00024 
                      00025 
                      00026 ; Определение точки входа в программу.
                      00027 ;=============================================================================================
0000                  00028             org        0           ; Начать выполнение программы
0000   2801           00029             goto       START       ; с первой команды подпрограммы START.
                      00030 ;*********************************************************************************************
                      00031 
                      00032 ;------------------------------- РАБОЧАЯ  ЧАСТЬ  ПРОГРАММЫ -----------------------------------
                      00033 ;*********************************************************************************************
                      00034 ; Подготовительные операции.
                      00035 ;---------------------------------------------------------------------------------------------
                      00036 
0001   1683           00037 START       bsf         STATUS,RP0      ;       Переключаемся на 1-й банк памяти,
                      00038                                     ;   в котором расположены
0002   30F0           00039             movlw           b'11110000' ;       регистры TRISB и OPTION_REG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0003   0086           00040             movwf           TRISB       ;       RB[7:4] - входы, RB[3:0] - выходы
0004   3000           00041             movlw           b'00000000' ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0005   0085           00042             movwf       TRISA       ;
MPASM  5.42                        KLDISP.ASM   6-16-2013  18:34:31         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0006   1381           00043             bcf         OPTION_REG,NOT_RBPU     ;       Включаем внутреннюю подтяжку
0007   1283           00044             bcf         STATUS,RP0      ;       Возвращаемся в 0-й банк
0008   1085           00045             bcf         PORTA,SCK
0009   1005           00046             bcf         PORTA,SDO
000A   3000           00047             movlw       0           ;   помещаем 0 в рабочий регистр
000B   00A5           00048             movwf       DATA_OUT    ;   и выводим его в три разряда индикатора
000C   204A           00049             call        SPI_WRITE   ;   тем самым
000D   204A           00050             call        SPI_WRITE   ;   очищая его
000E   204A           00051             call        SPI_WRITE
                      00052 
000F   01A5           00053 OPROS       clrf        DATA_OUT
0010   203B           00054             call        GET_IT      ;   опрашиваем клавиатуру
0011   00A6           00055             movwf       TEMP
0012   0AA6           00056             incf        TEMP,F
0013   1903           00057             btfsc       STATUS,Z    ;   проверяем нажата какая нибудь клавиша
0014   280F           00058             goto        OPROS       ;   если нет то повторяем опрос клавиатуры
0015   00A6           00059             movwf       TEMP 
0016   3EF4           00060             addlw       -d'12'      ;   проверяем нажата ли клавиша SET
0017   1903           00061             btfsc       STATUS,Z    ;   если нажата 
0018   2801           00062             goto        START       ;   то переходим к началу программы
0019   0826           00063             movf        TEMP,W
001A   3EF5           00064             addlw       -d'11'      ;   проверяем нажата ли клавиша 0
001B   1903           00065             btfsc       STATUS,Z    ;   если нажата 
001C   2821           00066             goto        M1          ;   то переходим к M1
001D   0826           00067             movf        TEMP,W      ;
001E   00A5           00068             movwf       DATA_OUT    ;   иначе, выводим число на индикацию
001F   204A           00069             call        SPI_WRITE   ;   и переходим к  задержке и опросу клавиатуры
0020   280F           00070             goto        OPROS
                      00071 
0021   3000           00072 M1          movlw       0           ;   помещаем 0 в рабочий регистр
0022   00A5           00073             movwf       DATA_OUT    ;   и выводим его в разряд индикатора
0023   204A           00074             call        SPI_WRITE 
0024   280F           00075             goto        OPROS 
                      00076 
                      00077 ;*************************************************************************
                      00078 ;       * ФУНКЦИЯ       :       Сканирует клавиатуру 4 х 3 и возвращает номер клавиши *
                      00079 ;       * ВХОД  :       Нет                                                           *
                      00080 ;       * ВЫХОД :       Номер клавиши в W ([MEM]=10, [0]=11, [SET]=12)            *
                      00081 ;       * ВЫХОД :       Возвращает -1 (h'FF') если не нажато ни одной клавиши     *
                      00082 ;   * ОКРУЖЕНИЕ : Переменные KEY_COUNT, PATTERN                           *
                      00083 ;**************************************************************************
                      00084 
                      00085            
0025   01A0           00086 SCAN_IT    clrf        KEY_COUNT    ;   Первая клавиша - "1" 
0026   0AA0           00087            incf        KEY_COUNT,F
0027   30FE           00088            movlw       b'11111110'      ;       Начальное значение шаблона 
0028   00A1           00089            movwf       PATTERN
                      00090            
0029   0821           00091 SLOOP      movf        PATTERN,W        ;       Считываем шаблон из памяти
002A   0086           00092            movwf       PORTB        ;   Выдаем на строку НИЗКИЙ уровень
                      00093 ; Теперь проверяем каждый столбец       на наличие нуля         
002B   1E06           00094            btfss       PORTB,4      ;   Проверяем 1-й столбец
MPASM  5.42                        KLDISP.ASM   6-16-2013  18:34:31         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002C   2839           00095            goto        GOT_IT       ;   ЕСЛИ ноль, ТО клавиша обнаружена!
002D   0AA0           00096            incf        KEY_COUNT,F      ;       ИНАЧЕ инкрементируем счетчик
002E   1E86           00097            btfss       PORTB,5      ;   Проверяем 2-й столбец
002F   2839           00098            goto        GOT_IT       ;   ЕСЛИ ноль, ТО клавиша обнаружена!
0030   0AA0           00099            incf        KEY_COUNT,F  ;   ИНАЧЕ инкрементируем счетчик
0031   1F06           00100            btfss       PORTB,6      ;   Проверяем 3-й столбец
0032   2839           00101            goto        GOT_IT       ;   ЕСЛИ ноль, ТО клавиша обнаружена!
0033   0AA0           00102                incf        KEY_COUNT,F  ;       ИНАЧЕ инкрементируем счетчик
                      00103 ; Сюда попадаем, если нет нажатых клавиш        
0034   0DA1           00104            rlf         PATTERN,F        ;   Сдвигаем шаблон
0035   1A21           00105                btfsc       PATTERN,4    ;   Появился ли 0 в 4-м бите?
0036   2829           00106                goto        SLOOP            ;   ЕСЛИ нет, ТО переходим к следующей строке
                      00107 ; ИНАЧЕ на клавиатуре нет нажатых клавиш        
0037   30FF           00108                movlw       -1           ;   Возвращаем -1
0038   283A           00109                goto        S_EXIT
0039   0820           00110 GOT_IT     movf        KEY_COUNT,W      ;   Копируем значение счетчика в W
003A   0008           00111 S_EXIT     return                   ;   и выходим
                      00112 
                      00113 
                      00114 ;****************************************************************************
                      00115 ;       * ФУНКЦИЯ       :       Сканирует клавиатуру 4 х 3 и возвращает номер клавиши   *
                      00116 ;       * ФУНКЦИЯ       :       (имеется защита от дребезга)                            *
                      00117 ;       * ВХОД  :       Нет                                                             *
                      00118 ;       * ВЫХОД :       Номер клавиши в W ([MEM]=10, [0]=11, [SET]=12)                  *
                      00119 ;       * ВЫХОД :       Возвращает -1 (h'FF')/ если не нажато ни одной клавиши          *
                      00120 ;       * ОКРУЖЕНИЕ     :       Переменные COUNT, NEW_KEY, OLD_KEY                      *
                      00121 ;       * ОКРУЖЕНИЕ     :       Подпрограмма SCAN__IT                                   *
                      00122 ;****************************************************************************
                      00123                   
003B   01A2           00124 GET_IT    clrf         COUNT       ;   Обнуляем счетчик
003C   3000           00125           movlw        d'0'        ;   присваиваем начальное
003D   00A2           00126           movwf        COUNT       ;   значение счетчику
003E   2025           00127 GLOOP     call         SCAN_IT     ;   «Сырое» значение находится в W
003F   00A3           00128               movwf        NEW_KEY     ;   Сохраняем новое значение
0040   0224           00129           subwf        OLD_KEY,W   ;   Отличается от предыдущего?
0041   1903           00130           btfsc        STATUS ,Z
0042   2846           00131           goto         EQUAL       ;   ЕСЛИ одинаковы, TO переходим к EQUAL
                      00132 ; Результат отличается от предыдущего, поэтому:         
0043   0823           00133           movf         NEW_KEY,W   ;   Переписываем предыдущее значение новым
0044   00A4           00134           movwf        OLD_KEY 
0045   283B           00135           goto         GET_IT      ;   и начинаем цикл опроса сначала
                      00136 ; ЕСЛИ значения одинаковы, ТО 
0046   0FA2           00137 EQUAL     incfsz       COUNT,F     ;   Инкрементируем счетчик. ЕСЛИ нет
0047   283E           00138           goto         GLOOP       ;   переполнения, считываем новое значение
0048   0824           00139           movf         OLD_KEY,W   ;   ИНАЧЕ возвращаем требуемое значение! 
0049   0008           00140           return
                      00141 
                      00142 
                      00143 ; ******************************************************
                      00144 ; * ФУНКЦИЯ : Побитно передает байт данных, начиная со * 
                      00145 ; *     старшего бита                                      *
                      00146 ; * ВХОД : Байт данных в DATA_OUT                      *
                      00147 ; * ВЫХОД : DATA_OUT обнуляется                        *
MPASM  5.42                        KLDISP.ASM   6-16-2013  18:34:31         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00148 ; ******************************************************
                      00149 ; Задача 1 
004A   1085           00150 SPI_WRITE  bcf        PORTA,SCK   ;   В режиме ожидания на линии SCK - НИЗКИЙ уровень 
                      00151 ; Задача 2
004B   3004           00152            movlw      4           ;   Инициализируем счетчик цикла
004C   00A2           00153            movwf      COUNT
                      00154 ; Задача 3, а и 3, б
004D   1005           00155 LOOP       bcf        PORTA,SDO   ;   Выставляем на линию данных 0
004E   19A5           00156            btfsc      DATA_OUT,3  ;   Пропускаем, ЕСЛИ старший бит = 0
004F   1405           00157            bsf        PORTA,SDO   ;   ИНАЧЕ выставляем на линию данных 1
0050   0DA5           00158            rlf        DATA_OUT,F  ;   Сдвигаем байт данных на один бит влево 
                      00159 ; Задача 3, в
0051   1485           00160            bsf        PORTA,SCK   ;   Формируем тактовый импульс
0052   0000           00161            nop
0053   0000           00162            nop
0054   1085           00163            bcf        PORTA,SCK 
                      00164 ; Задача 3, г
0055   0BA2           00165            decfsz     COUNT,F     ;   Декрементируем счетчик
0056   284D           00166            goto       LOOP        ;   и повторяем, пока он не станет равным 0
0057   1005           00167            bcf        PORTA,SDO
0058   205A           00168            call       DELAY
0059   0008           00169            return
                      00170 
                      00171 ; ******************************************************
                      00172 ; * ФУНКЦИЯ : Формирование задержки                    * 
                      00173 ; ******************************************************
                      00174 
Warning[202]: Argument out of range.  Least significant bits used.
005A   3028           00175 DELAY      movlw      128         ;   Инициализируем счетчик внешнего цикла 
005B   00A2           00176            movwf      COUNT
Warning[202]: Argument out of range.  Least significant bits used.
005C   3055           00177 M2         movlw      255         ;   Инициализируем счетчик внутреннего цикла 
005D   00A7           00178            movwf      COUNT2
005E   0000           00179 M3         nop
005F   0000           00180            nop
0060   0000           00181            nop
0061   0BA7           00182            decfsz     COUNT2,F    ;   Декрементируем счетчик 2
0062   285E           00183            goto       M3          ;   и повторяем, пока он не станет равным 0
0063   0BA2           00184            decfsz     COUNT,F     ;   Декрементируем счетчик 1
0064   285C           00185            goto       M2          ;   и повторяем, пока он не станет равным 0
0065   0008           00186            return
                      00187 
                      00188            end
MPASM  5.42                        KLDISP.ASM   6-16-2013  18:34:31         PAGE  5


SYMBOL TABLE
  LABEL                             VALUE 

C                                 00000000
COUNT                             00000022
COUNT2                            00000027
DATA_OUT                          00000025
DC                                00000001
DELAY                             0000005A
EEADR                             00000009
EECON1                            00000088
EECON2                            00000089
EEDATA                            00000008
EEIE                              00000006
EEIF                              00000004
EQUAL                             00000046
F                                 00000001
FSR                               00000004
GET_IT                            0000003B
GIE                               00000007
GLOOP                             0000003E
GOT_IT                            00000039
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
KEY_COUNT                         00000020
LOOP                              0000004D
M1                                00000021
M2                                0000005C
M3                                0000005E
NEW_KEY                           00000023
NOT_PD                            00000003
NOT_RBPU                          00000007
NOT_TO                            00000004
OLD_KEY                           00000024
OPROS                             0000000F
OPTION_REG                        00000081
PATTERN                           00000021
PCL                               00000002
PCLATH                            0000000A
PORTA                             00000005
PORTB                             00000006
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RB0                               00000000
RB1                               00000001
MPASM  5.42                        KLDISP.ASM   6-16-2013  18:34:31         PAGE  6


SYMBOL TABLE
  LABEL                             VALUE 

RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RD                                00000000
RP0                               00000005
RP1                               00000006
SCAN_IT                           00000025
SCK                               00000001
SDO                               00000000
SLOOP                             00000029
SPI_WRITE                         0000004A
START                             00000001
STATUS                            00000003
S_EXIT                            0000003A
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
TEMP                              00000026
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_CONFIG                           00002007
_CP_OFF                           00003FFF
_CP_ON                            0000000F
_DEVID1                           00002006
_HS_OSC                           00003FFE
_IDLOC0                           00002000
MPASM  5.42                        KLDISP.ASM   6-16-2013  18:34:31         PAGE  7


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F84A                          00000001
__DEBUG                           1


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXX---------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   102
Program Memory Words Free:   922


Errors   :     0
Warnings :     2 reported,     0 suppressed
Messages :     3 reported,     0 suppressed

