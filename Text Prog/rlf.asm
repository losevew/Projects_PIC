;***********************************************************************************************
;                ПРИМЕР ИСПОЛЬЗОВАНИЯ ФЛАГА "C" В ОПЕРАЦИИ УМНОЖЕНИЯ НА 10
;***********************************************************************************************
; Rlf.asm            Подпрограмма умножения 8-битных чисел на 10
;*********************************************************************************************** 
; Множимое: числа от .00 до .255, которые закладываются в регистр RegL на момент начала
; подпрограммы перемножения на 10.
; Множитель: 10 (2*2*2+1+1).             
; Произведение: результат трех умножений на 2 и двух суммирований. На момент окончания 
; ПП умножения на 10, записывается в двухбайтный регистр RegL/RegH (двухбайтное двоичное число).
;***********************************************************************************************
;                                 "ШАПКА ПРОГРАММЫ"
;***********************************************************************************************
;.............................................................
;.............................................................
;===============================================================================================
; Определение положения регистров специального назначения. 
;===============================================================================================
Status      equ        03h         ; Регистр Status.
;.............................................................
;.............................................................
;===============================================================================================
; Определение названия и положения регистров общего назачения.
;===============================================================================================
RegL        equ        0Ch         ; Регистр множимого. Он же - регистр младшего байта.
RegH        equ        0Eh         ; Регистр старшего байта.
;.............................................................
;.............................................................
;===============================================================================================
; Определение места размещения результатов операций.
;===============================================================================================
W           equ        0           ; Результат направить в аккумулятор.
F           equ        1           ; Результат направить в регистр.
;.............................................................
;===============================================================================================
; Присваивание битам названий.
;===============================================================================================
C           equ        0           ; Бит флага переноса-заема.
;.............................................................
;===============================================================================================
            org        0           ; Начать выполнение программы 
            goto       START       ; с подпрограммы START.
;***********************************************************************************************

 

;***********************************************************************************************
;                               РАБОЧАЯ ЧАСТЬ ПРОГРАММЫ
;***********************************************************************************************
START       ......................................
            ......................................
            ......................................
            ......................................
     На момент начала ПП умножения, в регистр RegL должно быть записано однобайтное двоичное
     число (множимое), которое нужно умножить на 10 (множитель).
     Значения произведений отражаются в двухбайтном регистре RegL/RegH.
;===============================================================================================
; Подпрограмма умножения на 10 однобайтных двоичных чисел (.00 ... .255)
;===============================================================================================
; Подготовительные операции.
;-----------------------------------------------------------------------------------------------
            bcf         Status,C    ; Установка в 0 бита № 0 регистра Status.
            movf        RegL,W      ; Копирование содержимого регистра RegL в регистр W.
            clrf        RegH        ; Сброс в 0 содержимого регистра RegH.
;-----------------------------------------------------------------------------------------------
; Три последовательных умножения на 2 (умножение на 8).
;-----------------------------------------------------------------------------------------------
            rlf         RegL,F      ; Циклический сдвиг влево содержимого регистра RegL
                                    ; с сохранением результата в нем же.
            btfsc       Status,C    ; Опрос состояния бита флага С.
            rlf         RegH,F      ; Если С=1, то циклический сдвиг влево содержимого регистра
                                    ; RegH c переносом в его младший разряд 1 из бита флага С
                                    ; с сохранением результата в нем же (в RegH).
;-----------------------------------------------------------------------------------------------
            rlf         RegL,F      ; Если С=0 (а также после исполнения предшествующей команды),
                                    ; то циклический сдвиг влево содержимого регистра
                                    ; RegL с сохранением результата в нем же.
            btfsc       Status,C    ; Опрос состояния бита флага С.
            rlf         RegH,F      ; Если С=1, то циклический сдвиг влево содержимого регистра
                                    ; RegH с переносом в его младший разряд 1 из бита флага С
                                    ; с сохранением результата в нем же (в RegH).
;-----------------------------------------------------------------------------------------------
            rlf         RegL,F      ; Если С=0 (а также после исполнения предшествующей команды),
                                    ; то циклический сдвиг влево содержимого регистра
                                    ; RegL с сохранением результата в нем же.
            btfsc       Status,C    ; Опрос состояния бита флага С.
            rlf         RegH,F      ; Если С=1, то циклический сдвиг влево содержимого регистра
                                    ; RegH с переносом в его младший разряд 1 из бита флага С
                                    ; с сохранением результата в нем же (в RegH).

                                    ; Если С=0 (а также после исполнения предшествующей команды),
                                    ; то программа исполняется далее (переход к суммированиям).
;-----------------------------------------------------------------------------------------------
; 2 последовательных суммирования сохраненного в регистре W множимого к результату умножения
; множимого на 8.
;-----------------------------------------------------------------------------------------------
            addwf       RegL,F      ; Сложить содержимое регистров RegL и W с сохранением
                                    ; результата в регистре RegL.
            btfsc       Status,C    ; Опрос состояния бита флага С.
            incf        RegH,F      ; Если бит С=1, то инкремент содержимого регистра RegH с
                                    ; сохранением результата в нем же.

            addwf       RegL,F      ; Если бит С=0 (а также после исполнения предшествующей
                                    ; команды), то сложить содержимое регистров RegL и W
                                    ; с сохранением результата в регистре RegL.
            btfsc       Status,C    ; Опрос состояния бита флага С.
            incf        RegH,F      ; Если бит С=1, то инкремент содержимого регистра RegH с
                                    ; сохранением результата в нем же.
;-----------------------------------------------------------------------------------------------            
            ........................; Если бит С=0 (а также после исполнения предшествующей
            ........................; команды), то программа исполняется далее.
            ......................................
            ......................................
;************************************************************************************************
            end                     ; Конец программы.


Примечание: в конце ПП умножения, вместо сценария "программа исполняется далее", можно использовать
            сценарий условного или безусловного перехода в подпрограмму, находящуюся в любом
            "месте" текста рабочей части программы.
            В этом случае, после команды последнего инкремента, должна быть исполнена команда
            call или goto соответственно.

