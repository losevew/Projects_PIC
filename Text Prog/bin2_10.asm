;***********************************************************************************************
;            ГРУППА ПОДРПРОГРАММ ПРЕОБРАЗОВАНИЯ ДВОИЧНЫХ ЧИСЕЛ В ДВОИЧНО-ДЕСЯТИЧНЫЕ
;        (для случая преобразования 4-байтных двоичных чисел в 8-разрядные  десятичные).
;***********************************************************************************************


;***********************************************************************************************
;                                 "ШАПКА ПРОГРАММЫ"
;***********************************************************************************************
; Bin2_10.asm   Универсальная группа подпрограмм преобразования 4-байтных двоичных чисел
;               в 8-разрядные десятичные числа. 
;.............................................................
;===============================================================================================
; Определение положения регистров специального назначения. 
;===============================================================================================
Indf        equ        00h         ; Регистр Indf.
Status      equ        03h         ; Регистр Status.
FSR         equ        04h         ; Регистр FSR.
;.............................................................
;.............................................................
;===============================================================================================
; Определение названия и положения регистров общего назачения.
;===============================================================================================
LED0        equ        10h         ; Регистр хранения результатов преобразований
                                   ; 1-го двоично-десятичного разряда.
LED1        equ        11h         ; ------- 2-го -------------------------
LED2        equ        12h         ; ------- 3-го -------------------------
LED3        equ        13h         ; ------- 4-го -------------------------
LED4        equ        14h         ; ------- 5-го -------------------------
LED5        equ        15h         ; ------- 6-го -------------------------
LED6        equ        16h         ; ------- 7-го -------------------------
LED7        equ        17h         ; ------- 8-го -------------------------

Count       equ        0Dh         ; Счетчик проходов.
Mem         equ        1Fh         ; Регистр оперативной памяти.

TimerL      equ        1Bh         ; Регистр младшего разряда 4-байтного двоичного числа.
TimerM      equ        1Ch         ; Регистр среднего разряда 4-байтного двоичного числа.
TimerH      equ        1Dh         ; Регистр старшего разряда 4-байтного двоичного числа.
TimerHH     equ        1Eh         ; Регистр самого старшего разряда 4-байтного двоичного числа.
;.............................................................
;.............................................................
;===============================================================================================
; Определение места размещения результатов операций.
;===============================================================================================
W           equ        0           ; Результат направить в аккумулятор.
F           equ        1           ; Результат направить в регистр.
;===============================================================================================
; Присваивание битам названий.
;===============================================================================================
C           equ        0           ; Флаг переноса-заема.
;.............................................................
;.............................................................       
;===============================================================================================
            org        0           ; Начать выполнение программы 
            goto       START       ; с подпрограммы START.
;***********************************************************************************************



;***********************************************************************************************
;                              РАБОЧАЯ ЧАСТЬ ПРОГРАММЫ
;***********************************************************************************************
START       .....................................
;           .....................................
NEW         call       Bin2_10     ; Условный переход в ПП Bin2_10
                                   ; Адрес следующей команды закладывается в стек.
;           .....................................
;           .....................................
;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; ГРУППА ПОДПРОГРАММ 8-РАЗРЯДНОЙ ДИНАМИЧЕСКОЙ ИНДИКАЦИИ без ПП TABLE
; (то, что было рассмотрено ранее).
;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;....       .....................................
;           .....................................
;....       .....................................
;           .....................................
;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; ГРУППА ПОДПРОГРАММ ФОРМИРОВАНИЯ 4-БАЙТНОГО ДВОИЧНОГО ЧИСЛА.
;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;....       .....................................
;           .....................................
;....       .....................................
;           .....................................
;           .....................................
;  К этому моменту 4-байтное двоичное число (в регистре TimerL/TimerM/TimerH/TimerHH)
;  должно быть сформировано для последующей обработки его в группе подпрограмм преобразования
;  4-байтных двоичных чисел в 8-разрядные десятичные числа.

            goto       NEW         ; Безусловный переход на метку NEW подпрограммы START,
                                   ; то есть, начало нового полного цикла "программы".         
;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; ГРУППА ПОДПРОГРАММ ПРЕОБРАЗОВАНИЯ 4-БАЙТНЫХ ДВОИЧНЫХ ЧИСЕЛ В 8-РАЗРЯДНЫЕ ДЕСЯТИЧНЫЕ ЧИСЛА.
;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Подготовка к преобразованию.
;===============================================================================================
Bin2_10     bcf        Status,C    ; Сброс флага переноса-заема.
            movlw      .32         ; Зпись в регистр Count числа проходов преобразования,
            movwf      Count       ; равного суммарному количеству битов многоразрядного
                                   ; регистра TimerL/TimerM/TimerH/TimerHH (8*4=32).

            clrf       LED0        ; Сброс в 0 содержимого регистра LED0.
            clrf       LED1        ; -------"------ LED1.
            clrf       LED2        ; -------"------ LED2.
            clrf       LED3        ; -------"------ LED3.
            clrf       LED4        ; -------"------ LED4.
            clrf       LED5        ; -------"------ LED5.
            clrf       LED6        ; -------"------ LED6.
            clrf       LED7        ; -------"------ LED7.
;-------------------------------------------------------------------------------
; Примечание: процесс преобразования заканчивается при уменьшении числа проходов
;             преобразования, которые заложены в регистр Count (.32), до нуля.
;===============================================================================================
; Циклический сдвиг влево.
;===============================================================================================         
Loop16      rlf        TimerL,F    ; Циклический сдвиг влево 4-байтного двоичного числа,
            rlf        TimerM,F    ; записанного в группе регистров TimerL/TimerM/TimerH/TimerHH,
            rlf        TimerH,F    ; на одну позицию через бит С регистра STATUS.
            rlf        TimerHH,F   ; --------------------"---------------------

            rlf        LED0,F      ; Циклический сдвиг влево 4-байтного двоичного числа,
            rlf        LED1,F      ; записанного в группе регистров LED0/LED1/LED2/LED3,
            rlf        LED2,F      ; на одну позицию через бит С регистра STATUS.
            rlf        LED3,F      ; --------------------"---------------------

            decfsz     Count,F     ; Декремент (-1) содержимого регистра Count с сохранением
                                   ; результата в нем же.
            goto       adjDEC      ; Если результат не=0, то переход в ПП adjDEC
                                   ; Если  результат =0, то программа исполняется далее.
;===============================================================================================
; Поразрядное распределение содержимого регистров LED0...3 (обоих
; полубайтов) по младшим полубайтам регистров LED0...7.
;===============================================================================================
            swapf      LED3,W      ; Запись старшего полубайта LED3 
            andlw      0Fh         ; в младший полубайт LED7.
            movwf      LED7        ; --------------------------------

            movfw      LED3        ; Запись младшего полубайта LED3
            andlw      0Fh         ; в младший полубайт LED6.
            movwf      LED6        ; --------------------------------

            swapf      LED2,W      ; Запись старшего полубайта LED2
            andlw      0Fh         ; в младший полубайт LED5.
            movwf      LED5        ; --------------------------------

            movfw      LED2        ; Запись младшего полубайта LED2
            andlw      0Fh         ; в младший полубайт LED4.
            movwf      LED4        ; --------------------------------

            swapf      LED1,W      ; Запись старшего полубайта LED1
            andlw      0Fh         ; в младший полубайт LED3.
            movwf      LED3        ; --------------------------------

            movfw      LED1        ; Запись младшего полубайта LED1
            andlw      0Fh         ; в младший полубайт LED2.
            movwf      LED2        ; --------------------------------

            swapf      LED0,W      ; Запись старшего полубайта LED0
            andlw      0Fh         ; в младший полубайт LED1.
            movwf      LED1        ; --------------------------------

            movfw      LED0        ; Запись младшего полубайта LED0
            andlw      0Fh         ; в младший полубайт LED0.
            movwf      LED0        ; --------------------------------
;--------------------------------------------------------------------
; Конец распределения. В младших полубайтах регистров LED0...7 установлены
; двоично-десятичные числа в порядке возрастания разрядности. Старшие полубайты = 0.
;--------------------------------------------------------------------
            return                 ; Переход по стеку в группу подпрограмм  
                                   ; 8-разрядной динамической индикации. 
;===============================================================================================
; Запись в регистр FSR адресов регистров LED0...3 для дальнейшей косвенной адресации
; к ним в ПП adjBCD.
; Переход к обработке следующего LED - после возврата по стеку.                      
;===============================================================================================
adjDEC      movlw      LED0        ; Запись в регистр FSR, через регистр W, адреса регистра LED0
            movwf      FSR         ; с дальнейшим переходом в ПП adjBCD
            call       adjBCD      ; (адрес следующей команды закладывается в стек).
;---> Возврат по стеку из ПП adjBCD.                                  
            movlw      LED1        ; -----------------------------
            movwf      FSR         ; То же самое для регистра LED1.
            call       adjBCD      ; -----------------------------
;---> Возврат по стеку из ПП adjBCD.
            movlw      LED2        ; -----------------------------
            movwf      FSR         ; То же самое для регистра LED2.
            call       adjBCD      ; -----------------------------
;---> Возврат по стеку из ПП adjBCD.
            movlw      LED3        ; -----------------------------
            movwf      FSR         ; То же самое для регистра LED3.
            call       adjBCD      ; -----------------------------
;---> Возврат по стеку из ПП adjBCD.
            goto       Loop16      ; Проход всех LED (с LED0 по LED3). Переход в ПП Loop16,
                                   ; то есть на следующее кольцо числовых преобразований.
;===============================================================================================
; Основные операции преобразования двоичных чисел в двоично-десятичные:
; операции сложения LED0...3 и констант 03h,30h с условиями по 3-му и 7-му битам.
;===============================================================================================
adjBCD      movlw      3           ; Сложить содержимое текущего LED (LED0...3) с числом 03h,  
            addwf      0,W         ; c записью результата операции, через регистр W,
            movwf      Mem         ; в регистр Mem.
  
            btfsc      Mem,3       ; Анализ состояния 3-го бита регистра Mem.
            movwf      0           ; Если бит № 3 =1, то содержимое регистра Mem 
                                   ; копируется в текущий LED.

            movlw      30          ; Если бит №3 =0, то содержимое текущего LED складывается
            addwf      0,W         ; с константой 30h, с последующей записью результата операции,  
            movwf      Mem         ; через регистр W, в регистр Mem.

            btfsc      Mem,7       ; Анализ состояния 7-го бита регистра Mem.
            movwf      0           ; Если бит №7 =1, то содержимое регистра Mem 
                                   ; копируется в текущий LED.

            retlw      0           ; Если бит №7 =0, то регистр W очищается и происходит
                                   ; возврат по стеку в ПП adjDEC.
;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; ГРУППА КОМАНД ПРЕОБРАЗОВАНИЯ ДВОИЧНО-ДЕСЯТИЧНОГО КОДА В КОД 7-СЕГМЕНТНОГО ИНДИКАТОРА
;            (относится к группе подпрограмм динамической индикации).
;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
TABLE       .....................................
;           .....................................
;           .....................................
;**********************************************************************************************
            end                     ; Конец программы.
