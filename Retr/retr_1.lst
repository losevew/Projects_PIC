MPASM  5.42                        RETR_1.ASM   3-9-2012  22:21:32         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*********************************************************************************************
                      00002 ; Retr_1.asm ВАРИАНТ С ПРЕРЫВАНИЯМИ
                      00003 ; Сканер для ретранслятора VERTEX-7000VXR.
                      00004 ; Автор: Корабельников Евгений Александрович  г.Липецк  декабрь 2004г.
                      00005 ; E-mail: karabea@lipetsk.ru              http://ikarab.narod.ru
                      00006 ;*********************************************************************************************
                      00007 ; Позволяет перевести VERTEX-7000VXR и другие подобные ретрансляторы из режима односторонней 
                      00008 ; ретрансляции в режим двухсторонней ретрансляции без потери качества работы.
                      00009 ;*********************************************************************************************
                      00010 ; Используется микроконтроллер PIC16F84A. Частота кварца 4000кГц.
                      00011 ;*********************************************************************************************
                      00012             LIST       p=16F84a    ; Используется PIC16F84A.
2007   3FF5           00013             __CONFIG   03FF5H      ; WDT включен, бит защиты не установлен.
                      00014 ;=============================================================================================
                      00015 ; Определение положения регистров специального назначения.
                      00016 ;=============================================================================================
  00000001            00017 OptionR     equ        01h         ; Option - банк1
  00000003            00018 Status      equ        03h         ; Регистр Status
  00000006            00019 PortB       equ        06h         ; Порт B
  00000006            00020 TrisB       equ        06h         ; Tris B - Банк1
  0000000B            00021 IntCon      equ        0Bh         ; Регистр IntCon
                      00022 ;=============================================================================================
                      00023 ; Определение названия и положения регистров общего назначения.
                      00024 ;=============================================================================================
  0000000C            00025 Trigg       equ        0Ch         ; Переключатель направления ретрансляции.
                      00026 
  0000000E            00027 W_Temp      equ        0Eh         ; Регистр сохранения содержимого W при прерываниях.
  0000000F            00028 Stat_Temp   equ        0Fh         ; Регистр сохранения содержимого STATUS при прерываниях.
                      00029 
  0000001E            00030 SecH        equ        1Eh         ; Старший байт счетчика времени сканирования.
  0000001F            00031 SecL        equ        1Fh         ; Младший байт счетчика времени сканирования.
                      00032 
  0000001C            00033 SecH_1      equ        1Ch         ; Старший байт счетчика защитного интервала времени.
  0000001D            00034 SecL_1      equ        1Dh         ; Младший байт счетчика защитного интервала времени.
                      00035 
  0000001A            00036 SecH_2      equ        1Ah         ; Старший байт счетчика задержки рабочей точки программы
                      00037                                    ; в прерывании.
  0000001B            00038 SecL_2      equ        1Bh         ; Младший байт счетчика задержки рабочей точки программы
                      00039                                    ; в прерывании.
                      00040 ;=============================================================================================
                      00041 ; Определение  места  размещения результатов операций.
                      00042 ;=============================================================================================
  00000000            00043 W           equ        0           ; Результат направить в аккумулятор.
  00000001            00044 F           equ        1           ; Результат направить в регистр.
                      00045 ;=============================================================================================
                      00046 ; Определение положения флагов и бита выбора банка в регистре STATUS.
                      00047 ;=============================================================================================
  00000005            00048 RP0         equ        5           ; Бит выбора банка.
                      00049 ;=============================================================================================
                      00050 ; Точка входа в программу.
                      00051 ;=============================================================================================
0000                  00052             org        0           ; Начать выполнение программы с нулевого адреса PC
0000   2819           00053             goto       START       ; (с первой команды подпрограммы START).
MPASM  5.42                        RETR_1.ASM   3-9-2012  22:21:32         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;=============================================================================================
                      00055 ; Точка входа в прерывание.
                      00056 ;=============================================================================================
0004                  00057             org        4           ; Назначение вектора прерывания (назначается, если
                      00058                                    ; в программе используются прерывания).
                      00059 ;=============================================================================================
                      00060 ; Объем программы: 63 слова в памяти программ.
                      00061 ;*********************************************************************************************
                      00062 
                      00063 
                      00064 ;*********************************************************************************************
                      00065 ; НАЧАЛО ПРЕРЫВАНИЯ.
                      00066 ;============================================================================================
                      00067 ; Сохранение  содержимого регистров STATUS и W в ОЗУ.
                      00068 ;--------------------------------------------------------------------------------------------
0004   008E           00069 INT         movwf      W_Temp      ; Скопировать содержимое регистра W в регистр W_Temp.
0005   0803           00070             movf       Status,W    ; Скопировать содержимое регистра Status в регистр W.
0006   008F           00071             movwf      Stat_Temp   ; Скопировать содержимое регистра W в регистр Stat_Temp.
                      00072 ;--------------------------------------------------------------------------------------------
                      00073 ; Проверка наличия несущей (опрос клавиатуры).
                      00074 ;--------------------------------------------------------------------------------------------
0007   1806           00075 CYCLE       btfsc      PortB,0     ; Проверка состояния нулевого бита регистра PortB.
0008   2813           00076             goto       EndInt      ; Если он =1 (несущей нет), то уход в ПП выхода из прерывания.
                      00077                                    ; Если он =0 (несущая есть), то программа исполняется далее.
                      00078 ;--------------------------------------------------------------------------------------------
                      00079 ; Формирование времени одного цикла задержки рабочей точки программы в прерывании.
                      00080 ;--------------------------------------------------------------------------------------------
0009   30FA           00081             movlw      .250        ; Закладка константы .250 в регистр W.  
000A   009A           00082             movwf      SecH_2      ; Копирование .250 из регистра W в регистр SecH_2.       
                      00083                                                             
000B   3078           00084             movlw      .120        ; Закладка константы .120 в регистр W.
000C   009B           00085             movwf      SecL_2      ; Копирование .120 из регистра W в регистр SecL_2.
                      00086 
000D   0064           00087 PAUSE_2     clrwdt                 ; Сброс WDT.
                      00088           
000E   0B9B           00089             decfsz     SecL_2,F    ; Декремент содержимого младшего разряда счетчика SecL_2.
000F   280D           00090             goto       PAUSE_2     ; Если результат декремента не =0, то переход в ПП PAUSE_2.          
                                     
                      00091   
0010   0F9A           00092             incfsz     SecH_2,F    ; Если результат декремента =0, то - инкремент старшего разряда счетч
                            ика SecH_2.
0011   280D           00093             goto       PAUSE_2     ; Если результат инкремента не=0, то переход в ПП PAUSE_2.
0012   2807           00094             goto       CYCLE       ; Если результат инкремента =0, то переход на следующий цикл
                      00095                                    ; задержки рабочей точки программы в прерывании.   
                      00096 ;============================================================================================
                      00097 ; Восстановление содержимого регистров STATUS и W с последующим выходом из прерывания.
                      00098 ;--------------------------------------------------------------------------------------------
0013   108B           00099 EndInt      bcf        IntCon,1    ; Сброс флага прерывания по INT.
                      00100 
0014   080F           00101             movf       Stat_Temp,W ; Скопировать содержимое регистра Stat_Temp в регистр W.
0015   0083           00102             movwf      Status      ; Скопировать содержимое регистра W в регистр Status.
0016   0E8E           00103             swapf      W_Temp,F    ; Поменять местами старший и младший полубайты регистра W_Temp
                      00104                                    ; с сохранением результата операции в нем же.
MPASM  5.42                        RETR_1.ASM   3-9-2012  22:21:32         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0017   0E0E           00105             swapf      W_Temp,W    ; Поменять местами старший и младший полубайты регистра W_Temp
                      00106                                    ; с сохранением результата операции в регистре W.
0018   0009           00107             retfie                 ; Возврат из прерывания по стеку.
                      00108 ;*********************************************************************************************
                      00109 ; КОНЕЦ ПРЕРЫВАНИЯ
                      00110 ;*********************************************************************************************
                      00111 
                      00112 
                      00113 
                      00114 ;*********************************************************************************************
                      00115 ; СКАНИРОВАНИЕ
                      00116 ;*********************************************************************************************
                      00117 ; Подготовительные операции.
                      00118 ;---------------------------------------------------------------------------------------------
0019   018B           00119 START       clrf       IntCon      ; Запретить все прерывания.
                      00120 
001A   0064           00121             clrwdt                 ; Сбросить сторожевой таймер WDT.
                      00122 
001B   1683           00123             bsf        Status,RP0  ; Установить банк 1.
                      00124 
001C   3001           00125             movlw      .1          ; RB0 работает на вход,
001D   0086           00126             movwf      TrisB       ; остальные - на выход.
                      00127 
001E   3000           00128             movlw      .0          ; Включить подтягивающие резисторы порта В.
001F   0081           00129             movwf      OptionR     ; На входе INT прерывания - по заднему фронту.
                      00130 
0020   1283           00131             bcf        Status,RP0  ; Установить банк 0.
                      00132 
                      00133 ;--------------------------------------------------------------------------------------------
                      00134 ; Выбор направления ретрансляции.
                      00135 ;--------------------------------------------------------------------------------------------
0021   180C           00136 TRIGGER     btfsc      Trigg,0     ; Проверка значения нулевого бита регистра Trigg.
0022   2826           00137             goto       Metka148    ; Если это значение =1, то переход на метку Metka148.  
                      00138                                    ; Если это значение =0, то программа исполняется далее.
                      00139 
0023   30FB           00140             movlw      .251        ; Закладка константы .251 (1111 1011) в регистр W.
0024   0086           00141             movwf      PortB       ; Копирование .251 из регистра W в регистр PortB.
                      00142                                    ; (выбор прямого направления ретрансляции: ПРМ-X, ПРД-Y).
                      00143 
0025   2828           00144             goto       Metka_1     ; Безусловный переход на метку Metka_1.
                      00145 
0026   30FF           00146 Metka148    movlw      .255        ; Закладка константы .255 (1111 1111) в регистр W.    
0027   0086           00147             movwf      PortB       ; Копирование .255 из регистра W в регистр PortB.        
                      00148                                    ; (выбор обратного направления ретрансляции: ПРМ-Y, ПРД-X).
                      00149 ;--------------------------------------------------------------------------------------------
                      00150 ; Формирование защитного интервала времени (ожидание окончания переходных процессов,
                      00151 ; возникающих при смене направлений ретрансляции) равного, примерно, 60 мс.
                      00152 ;--------------------------------------------------------------------------------------------
0028   30C5           00153 Metka_1     movlw      .197        ; Закладка в регистр W константы .197  
0029   009C           00154             movwf      SecH_1      ; Копирование константы .197 из регистра W в регистр SecH_1.         
                      00155                                                            
002A   3079           00156             movlw      .121        ; Закладка в регистр W константы .121
002B   009D           00157             movwf      SecL_1      ; Копирование константы .121 из регистра W в регистр SecL_1.
MPASM  5.42                        RETR_1.ASM   3-9-2012  22:21:32         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00158 
                      00159 
002C   0064           00160 PAUSE_D     clrwdt                 ; Сброс WDT.
                      00161           
002D   0B9D           00162             decfsz     SecL_1,F    ; Декремент содержимого младшего разряда счетчика SecL_1
002E   282C           00163             goto       PAUSE_D     ; Если результат декремента не =0, то переход в ПП PAUSE_D.          
                                      
                      00164   
002F   0F9C           00165             incfsz     SecH_1,F    ; Если результат декремента =0, то - инкремент старшего разряда счетч
                            ика SecH_1.
0030   282C           00166             goto       PAUSE_D     ; Если результат инкремента не=0, то переход в ПП PAUSE_D.
                      00167                                    ; Если результат инкремента =0, то программа исполняется далее.
                      00168 ;============================================================================================
                      00169 ; Формирование интервала времени сканирования.
                      00170 ;============================================================================================
0031   30F5           00171             movlw      .245        ; Закладка константы .245 в регистр W.    
0032   009E           00172             movwf      SecH        ; Копирование .245 из регистра W в регистр SecH.        
                      00173                                    ;                      
0033   30FF           00174             movlw      .255        ; Закладка константы .255 в регистр W.
0034   009F           00175             movwf      SecL        ; Копирование .255 из регистра W в регистр SecL.
                      00176 ;--------------------------------------------------------------------------------------------
                      00177 ; Разрешение прерываний INT.
                      00178 ;--------------------------------------------------------------------------------------------
0035   3090           00179             movlw      .144        ; Закладка константы .144 в регистр W.
0036   008B           00180             movwf      IntCon      ; Копирование .144 (1001 0000) из регистра W в регистр IntCon
                      00181                                    ; (разрешение прерываний по входу INT).
                      00182 ;--------------------------------------------------------------------------------------------
0037   0064           00183 PAUSE       clrwdt                 ; Сброс WDT.
                      00184 
0038   0B9F           00185             decfsz     SecL,F      ; Декремент содержимого младшего разряда счетчика SecL.
0039   2837           00186             goto       PAUSE       ; Если результат декремента не=0, то переход в ПП PAUSE.
                      00187   
003A   0F9E           00188             incfsz     SecH,F      ; Если результат декремента =0, - то инкремент старшего разряда счетч
                            ика SecH.
003B   2837           00189             goto       PAUSE       ; Если результат инкремента не=0, то переход в ПП PAUSE.
                      00190                                    ; Если результат инкремента =0, то программа исполняется дальше.
                      00191 ;--------------------------------------------------------------------------------------------
                      00192 ; Изменение направления ретрансляции.
                      00193 ;--------------------------------------------------------------------------------------------
003C   018B           00194             clrf       IntCon      ; Запрет всех прерываний.
                      00195 
003D   0A8C           00196             incf       Trigg,F     ; Увеличение на 1 (инкремент) содержимого переключателя
                      00197                                    ; направления ретрансляции.
003E   2819           00198             goto       START       ; Переход на новый цикл сканирования.
                      00199 ;********************************************************************************************
                      00200             end                    ; Конец программы.                                 
MPASM  5.42                        RETR_1.ASM   3-9-2012  22:21:32         PAGE  5


SYMBOL TABLE
  LABEL                             VALUE 

CYCLE                             00000007
EndInt                            00000013
F                                 00000001
INT                               00000004
IntCon                            0000000B
Metka148                          00000026
Metka_1                           00000028
OptionR                           00000001
PAUSE                             00000037
PAUSE_2                           0000000D
PAUSE_D                           0000002C
PortB                             00000006
RP0                               00000005
START                             00000019
SecH                              0000001E
SecH_1                            0000001C
SecH_2                            0000001A
SecL                              0000001F
SecL_1                            0000001D
SecL_2                            0000001B
Stat_Temp                         0000000F
Status                            00000003
TRIGGER                           00000021
Trigg                             0000000C
TrisB                             00000006
W                                 00000000
W_Temp                            0000000E
__16F84A                          00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXX-
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:    60
Program Memory Words Free:   964


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

